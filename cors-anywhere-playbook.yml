- name: Set up CORS Anywhere Server with SSL from Let's Encrypt
  hosts: all
  remote_user: root
  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist

    - name: Install Node.js, NPM, nginx, and software-properties-common
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - nodejs
        - npm
        - nginx
        - software-properties-common

    - name: Add Certbot PPA
      ansible.builtin.apt_repository:
        repo: 'ppa:certbot/certbot'
        state: present

    - name: Install Certbot
      ansible.builtin.apt:
        name: certbot
        state: present

    - name: Install Certbot Nginx plugin
      ansible.builtin.apt:
        name: python3-certbot-nginx
        state: present

    - name: Obtain SSL certificate from Let's Encrypt
      ansible.builtin.command:
        cmd: certbot --nginx -d cors.kira.network --non-interactive --agree-tos --email hello@kira.network
        creates: /etc/letsencrypt/live/cors.kira.network/fullchain.pem
      register: certbot_result
      failed_when: certbot_result.rc not in [0, 1]
      changed_when: certbot_result.rc == 0
      when: not ansible_check_mode

    - name: Clone CORS Anywhere repository at a specific tag
      ansible.builtin.git:
        repo: 'https://github.com/Rob--W/cors-anywhere.git'
        dest: /opt/cors-anywhere
        version: '0.4.4'  # Check for updated ver
        clone: true
        update: true


    - name: Install CORS Anywhere dependencies
      community.general.npm:
        path: /opt/cors-anywhere

    - name: Create CORS Anywhere Systemd service file
      ansible.builtin.copy:
        dest: /etc/systemd/system/cors-anywhere.service
        content: |
          [Unit]
          Description=CORS Anywhere Service
          After=network.target

          [Service]
          Type=simple
          User=nobody
          WorkingDirectory=/opt/cors-anywhere
          Environment="PORT=8080"
          ExecStart=/usr/bin/node /opt/cors-anywhere/server.js
          Restart=on-failure
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
        mode: '0644'


    - name: Reload Systemd to recognize CORS Anywhere service
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable CORS Anywhere service to start on boot
      ansible.builtin.systemd:
        name: cors-anywhere
        enabled: true

    - name: Create Nginx configuration for CORS Anywhere
      ansible.builtin.blockinfile:
        path: /etc/nginx/sites-available/cors-anywhere
        create: true
        block: |
          server {
              listen 443 ssl;
              server_name cors.kira.network www.cors.kira.network;

              ssl_certificate /etc/letsencrypt/live/cors.kira.network/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/cors.kira.network/privkey.pem;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';
              ssl_prefer_server_ciphers on;

              location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        mode: '0644'

    - name: Enable Nginx CORS Anywhere configuration
      ansible.builtin.file:
        src: /etc/nginx/sites-available/cors-anywhere
        dest: /etc/nginx/sites-enabled/cors-anywhere
        state: link

    - name: Remove Nginx default configuration from sites-enabled
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Remove Nginx default configuration from sites-available
      ansible.builtin.file:
        path: /etc/nginx/sites-available/default
        state: absent

    - name: Start CORS Anywhere service
      ansible.builtin.systemd:
        name: cors-anywhere
        state: started

    - name: Check CORS Anywhere service status
      ansible.builtin.systemd:
        name: cors-anywhere
      register: service_status

    - name: Display CORS Anywhere service status
      ansible.builtin.debug:
        msg: "Status of CORS Anywhere service: {{ service_status.status }}"

    - name: Reload Nginx to apply new configuration
      ansible.builtin.systemd:
        name: nginx
        state: reloaded
